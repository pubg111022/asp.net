// <auto-generated />
using System;
using Client.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Client.Migrations
{
    [DbContext(typeof(RecruitmentManagementContext))]
    [Migration("20221130131944_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Client.Models.Apply_Job", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CV")
                        .IsRequired();

                    b.Property<DateTime>("Created_Date");

                    b.Property<string>("JobId");

                    b.Property<string>("Job_id");

                    b.Property<string>("UserId");

                    b.Property<string>("User_Id")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.HasIndex("UserId");

                    b.ToTable("Apply_Job");
                });

            modelBuilder.Entity("Client.Models.Company", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created_Date");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("Establishment_date");

                    b.Property<string>("Image")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("Client.Models.Job", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Category_Id")
                        .IsRequired();

                    b.Property<string>("CompanyId");

                    b.Property<string>("Company_Id")
                        .IsRequired();

                    b.Property<DateTime>("Created_Date");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<string>("Job_CategoryId");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<float>("Offer_Salary");

                    b.Property<int>("Quantity");

                    b.Property<string>("Skill_Level")
                        .IsRequired();

                    b.Property<bool>("Status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("UserId");

                    b.Property<string>("User_Id")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("Job_CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("Client.Models.Job_Category", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created_Date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.ToTable("Job_Category");
                });

            modelBuilder.Entity("Client.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Birthday");

                    b.Property<DateTime>("Created_Date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("Gender");

                    b.Property<string>("Image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("Role");

                    b.Property<bool>("Status");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Client.Models.Apply_Job", b =>
                {
                    b.HasOne("Client.Models.Job", "Job")
                        .WithMany("Apply_Jobs")
                        .HasForeignKey("JobId");

                    b.HasOne("Client.Models.User", "User")
                        .WithMany("Apply_Job")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Client.Models.Job", b =>
                {
                    b.HasOne("Client.Models.Company", "Company")
                        .WithMany("Jobs")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Client.Models.Job_Category", "Job_Category")
                        .WithMany("Jobs")
                        .HasForeignKey("Job_CategoryId");

                    b.HasOne("Client.Models.User", "User")
                        .WithMany("Jobs")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
